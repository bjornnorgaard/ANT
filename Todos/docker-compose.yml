version: "3.7"

services:

  todos-api:
    image: ursu/ant-todos-api:latest
    build:
      context: .
    ports:
      - 6001:80
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      DatabaseOptions__TodoDatabase: "Server=mssqlserver;Database=Todo;User=sa;Password=Your_password123;"
      HangfireOptions__ConnectionString: "Server=mssqlserver;Database=Todo;User=sa;Password=Your_password123;"
      HangfireOptions__EnabledHangfire: "true"
      SwaggerOptions__ApplicationTitle: "Todo Api Docker"
      LoggingOptions__ApplicationName: "Todo Api Docker"
      LoggingOptions__ElasticSearchUrl: "http://elasticsearch:9200"
      ElasticApm__ServiceName: "Todo Api"
      ElasticApm__Environment: "Docker"
      ElasticApm__ServerUrls: "http://apm-server:8200"
      Serilog__MinimumLevel__Override__Elastic.Apm: "Error"
    depends_on:
      - mssqlserver

  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    volumes:
      - ./Ant.Volumes/mssqlserver/mssql/data:/var/opt/mssql/data
      - ./Ant.Volumes/mssqlserver/sqlserver:/var/opt/mssqlserver

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.15.2
    depends_on:
      - elasticsearch
      - kibana
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    ports:
      - 8200:8200
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    ports:
      - 9200:9200
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - ./Ant.Volumes/elasticsearch/data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.2
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601

  prometheus:
    image: prom/prometheus:v2.30.4
    ports:
      - "9090:9090"
    volumes:
      - ./Ant.Data/prometheus:/etc/prometheus
      - ./volumes/prometheus:/prometheus
    # Reload condig with: curl -X POST http://localhost:9090/-/reload
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  node-exporter:
    image: prom/node-exporter:latest
    expose:
      - 9100

  mssql-exporter:
    image: awaragi/prometheus-mssql-exporter
    environment:
      SERVER: "mssqlserver"
      USERNAME: "sa"
      PASSWORD: "Your_password123"
    expose:
      - 4000

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./Ant.Volumes/grafana/:/var/lib/grafana
    depends_on:
      - prometheus

  eventstore:
    image: eventstore/eventstore:20.10.2-buster-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - ./Ant.Volumes/eventstore/var/lib/eventstore:/var/lib/eventstore
      - ./Ant.Volumes/eventstore/var/log/eventstore:/var/log/eventstore
